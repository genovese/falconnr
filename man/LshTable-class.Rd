% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsh.R
\docType{class}
\name{LshTable-class}
\alias{LshTable}
\alias{LshTable-class}
\title{A lightweight S4 class representing a FALCONN LSH search table}
\description{
Objects of this class create a Locality-Sensitive Hashing
nearest-neighbor search table with an interface to the
FALCONN similarity-search library.
}
\details{
This is constructed with a data matrix, and the resulting search
structure is \emph{static}, in the sense that any change or additino
to the data requires that a new LshTable object be created.

This is (for now) a lightweight class in that methods for configuring
the table and search algorithm are called directly on the slots,
which are Rccp objects exposed from C++. See the vignette on
configuration for more details. Later versions will expand the range
of available methods for this purpose.

The main search facilities are encapsulated in a single R method
\code{similar}, which can do nearest-neighbor or near-neighbor
searches based on the parameters.

Note that Rcpp module objects, such as those held in both slots
of this class, hold pointers that are not persistent across
sessions. To prevent unexpected pointer errors, it is recommended
that objects of this class be removed before ending a session.
See the function @seealso \code{\link{falconnr::cleanup}} for
an automatic way to do this.
}
\section{Slots}{

\describe{
\item{\code{table}}{-- a LshNnTable object based on the given data matrix}

\item{\code{params}}{-- a LshParameterSetter object to configure FALCONN}

\item{\code{data}}{-- the data matrix on which the search table was based}
}}

